kind: Secret
apiVersion: v1
metadata:
  name: db-secret
stringData:
  POSTGRESQL_PASSWORD: archive_pass
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: db-config
data:
  POSTGRESQL_URL: jdbc:postgresql://db.sbercode-2f067665-d78f-4f7a-95c2-ece0bfebf71c-work.svc.cluster.local:30242
  POSTGRESQL_USERNAME: archive
  POSTGRESQL_DATABASE: archive_db
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: db-init-config
data:
  init-db.sql: |
    DROP TABLE IF EXISTS Documents;
    DROP TABLE IF EXISTS Boxes;
    CREATE TABLE Boxes 
    (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL,
    CODE VARCHAR(20) NOT NULL UNIQUE
    );
    CREATE TABLE Documents (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL,
    CODE VARCHAR(20) NOT NULL UNIQUE,
    BOX INT,
    foreign key (BOX) references Boxes(ID)
    );
    INSERT INTO Boxes (NAME,CODE) VALUES
    ('Box1','b0001'),
    ('Box2','b0002'),
    ('Box3','b0003'),
    ('Box4','b0004');
    INSERT INTO Documents (NAME, CODE, BOX) VALUES
    ('Document1', 'd000001', 1),
    ('Document2', 'd000002', 2),
    ('Document3', 'd000003', 3),
    ('Document4', 'd000004', 4),
    ('Document5', 'd000005', 1),
    ('Document6', 'd000006', 2),
    ('Document7', 'd000007', 1),
    ('Document8', 'd000008', 4);
    INSERT INTO Documents (NAME, CODE) VALUES
    ('Document9', 'EmptyBox1'),
    ('Document10', 'EmptyBox2');
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: archive-manager-config
data:
  application.yaml: |
    server:
      port: 30241
      servlet:
        context-path: /api/v1/archive-manager
    spring:
      datasource:
        driver-class-name: org.postgresql.Driver
        url: ${POSTGRESQL_URL}/${POSTGRESQL_DATABASE}
        username: ${POSTGRESQL_USERNAME}
        password: ${POSTGRESQL_PASSWORD}
      jpa:
        database-platform: org.hibernate.dialect.PostgreSQL95Dialect
    management:
      endpoints:
        web:
          exposure:
            include: "health, metrics, prometheus"
      metrics:
        export:
          prometheus:
            enabled: true
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: db
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-selector
  template:
    metadata:
      labels:
        app: db-selector
    spec:
      containers:
        - name: postgres-containers
          image: bitnami/postgresql:15
          ports:
            - name: am-tcp-postgres
              containerPort: 5432
          volumeMounts:
            - name: db-init-volume
              mountPath: /docker-entrypoint-initdb.d/
          envFrom:
            - configMapRef:
                name: db-config
            - secretRef:
                name: db-secret
      volumes:
        - name: db-init-volume
          configMap:
            name: db-init-config
---
kind: Service
apiVersion: v1
metadata:
  name: db
spec:
  selector:
    app: db-selector
  ports:
    - name: postgres
      protocol: TCP
      port: 30242
      targetPort: am-tcp-postgres
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: archive-manager
  labels:
    app: archive-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: archive-manager
  template:
    metadata:
      labels:
        app: archive-manager
    spec:
      containers:
        - name: archive-manager-cont
          image: pazas/archive-manager:1.0.4
          ports:
            - name: am-app-port
              containerPort: 30241
          volumeMounts:
            - name: archive-manager-config-volume
              mountPath: /app/config/
          envFrom:
            - configMapRef:
                name: db-config
            - secretRef:
                name: db-secret
      volumes:
        - name: archive-manager-config-volume
          configMap:
            name: archive-manager-config
---
kind: Service
apiVersion: v1
metadata:
  name: archive-manager-service
spec:
  selector:
    app: archive-manager
  ports:
    - name: am-svc-port
      protocol: TCP
      port: 30241
      targetPort: am-app-port
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: archive-manager-ingress
  labels:
    app: archive-manager-ingress
spec:
  rules:
    - host: sbercode-2f067665-d78f-4f7a-95c2-ece0bfebf71c-work.apps.sbc-okd.pcbltools.ru
      http:
        paths:
          - path: /api/v1/archive-manager
            pathType: Prefix
            backend:
              service:
                name: archive-manager-service
                port:
                  name: am-svc-port